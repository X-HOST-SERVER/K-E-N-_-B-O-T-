import fetch from "node-fetch";

let handler = async (m, { conn, text }) => {
  if (!text) return m.reply("- ใ๐ชใ ูู ุชุธู ุฃููู ุฃูุฑุฃ ุงูุนูููุ ุงูุชุจ ุดูุฆูุง ุจุนุฏ ุงูุฃูุฑ.\nูุซุงู:\nโฃ .ุงุณุชูุฑ ุงูุถู ุงููู โฃ\n*.ุงุณุชูุฑ* ุงูุชุจ ุฑูุฒ JS");

  await m.reply("... ูุฐุง ุงูููุช ุงูุฐู ุชุถูุน ูููุ ููุท ูุฃุณุฃููุ ุงูุชุธุฑ ูุญุธุฉ.");

  try {
    let result = await CleanDx(text);
    await m.reply(`*โฎโโโโโโโ๐ฉโโโโโโโ๐ช*\nใ ๐ ใ${result}\n*โฏโโโโโโโ๐ฉโโโโโโโ๐ช*`);
  } catch (e) {
    await m.reply("ใ ๐ ใูู ุชุธู ุฃููู ุฃูุชูุ ุญุชู ุงูู AI ูุง ูุชูุงูู ุนู ุชุฌุงููู.");
  }
};

handler.help = ["dx"];
handler.tags = ["ai"];
handler.command = /^(ุงูุณุชูุฑ)$/i;

export default handler;

async function CleanDx(your_qus) {
  let Baseurl = "https://alakreb.vercel.app/api/ai/gpt?q=";
  
  // ุฌุนู ุงูู API ูุชุญุฏุซ ูู ุงูุงุณุชูุฑ ูู "ูุงุฒุจูู ููุชูู" ุจุดูู ุฏููู
  let prompt = `ุชุญุฏุซ ูู ุงูุงุณุชูุฑ ูู "ูุงุฒุจูู ููุชูู". ุงุณุชุฎุฏู ุฃุณููุจู ุงูุฎุงุต ูู ุงูุฑุฏุ ุชุฐูุฑ ูู ุดูุก ูุชุนูู ุจุดุฎุตูุชู: ูุณูุฉุ ุณุฎุฑูุฉุ ูุฐูุงุก ูุงุฐุน. ุณุคุงูู ูู: ${your_qus}`;

  let response = await fetch(Baseurl + encodeURIComponent(prompt)); // ุฅุฑุณุงู ุงููุต ุงููุญุณู ุฅูู ุงูู API
  let data = await response.json();
  return data.message; // ูุฐู ูู ุงูุฑุณุงูุฉ ูู ุงูู API
}